const e=/^[0-9]+$/;var t=function(t){let r=t.split("/");for(let t=1;t<r.length;t+=1)r[t]=r[t].replace(/~1/g,"/").replace(/~0/g,"~"),e.test(r[t])&&(r[t]=parseInt(r[t],10));return r.length>1&&""===r[r.length-1]&&r.pop(),r};const r=t;var p=function(e,t){if(!e)return t;let p=e;if("string"==typeof e&&(p=r(e)),""!==p[0])return;let a=t;for(let e=1;e<p.length;e+=1){let t=p[e];if("-"===t)a=a[a.length-1];else if("number"==typeof t)a=a[t];else{if(!a.hasOwnProperty(t))return;a=a[t]}}return a};var a=function(e){return e&&0!==e.length?"/"+(e=e.map((e=>(e=String(e),e.replace(/~[^01]/g,"~0").replace(/\//g,"~1"))))).join("/"):""},n={isArray:e=>"[object Array]"===Object.prototype.toString.call(e),isBoolean:e=>"boolean"==typeof e,isNumber:e=>"number"==typeof e&&isFinite(e),isString:e=>"string"==typeof e,isObject:e=>"[object Object]"===Object.prototype.toString.call(e)};const o=t,i=p,{isArray:l,isObject:s}=n;var c=function(e,t){let r="",p=o(e);p.length>1&&(r=p.pop());let a=i(p,t);return l(a)||s(a)||(a=void 0),{parent:a,prop:r}};const u=p,f=c,{isArray:v,isNumber:h,isObject:g,isString:y}=n;var b=(e,t)=>{let r=u(e.path,t);if(!0===v(r))return void r.push(e.value);if(!0===g(r)&&!0===g(e.value))return void Object.assign(r,e.value);let p=f(e.path,t);v(p.parent)&&("-"===p.prop?p.parent.push(e.value):h(p.prop)&&p.parent.splice(p.prop,0,e.value)),g(p.parent)&&y(p.prop)&&(p.parent[p.prop]=e.value)};const m=c,{isArray:j,isNumber:d,isObject:O}=n;var A=(e,t)=>{let r=m(e.path,t);O(r.parent)&&delete r.parent[r.prop],j(r.parent)&&d(r.prop)&&r.parent.splice(r.prop,1)};const S=c,{isArray:N,isNumber:w,isObject:E}=n;var J=(e,t)=>{let r=S(e.path,t);E(r.parent)&&(r.parent[r.prop]=e.value),N(r.parent)&&w(r.prop)&&(r.parent[r.prop]=e.value)};const P=p,$=A,k=b;var x=(e,t)=>{let r=P(e.from,t),p={op:"remove",path:e.from};$(p,t);let a={op:"add",path:e.path,value:r};k(a,t)};const B=p,F=b;var I=(e,t)=>{let r=B(e.from,t),p={op:"add",path:e.path,value:r};F(p,t)};const q=p;var z=(e,t)=>{let r=q(e.path,t);if(JSON.stringify(r)!==JSON.stringify(e.value))throw new Error(`simple-json-patch error: patch-test failed '${e.path}'`)};const{isArray:C}=n,D={add:b,remove:A,replace:J,move:x,copy:I,test:z};var G={get:p,make:a,apply:function(e,t){return C(e)||(e=[e]),e.forEach((e=>{D[e.op]&&D[e.op](e,t)})),t},getParent:c};export default G;
